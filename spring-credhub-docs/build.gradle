/*
 * Copyright 2016-2020 the original author or authors.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *      https://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

plugins {
	id 'org.asciidoctor.jvm.convert' version '3.2.0'
}

dependencyManagement {
	imports {
		mavenBom "org.springframework.boot:spring-boot-dependencies:${springBootVersion}"
		mavenBom "io.projectreactor:reactor-bom:${reactorVersion}"
	}
}

description = "Spring CredHub Documentation"

configurations {
	asciidoctorExtensions
}

dependencies {
	compile project(":spring-credhub-core")
	compile("io.projectreactor:reactor-core")
	compile("org.springframework.boot:spring-boot-autoconfigure")

	asciidoctorExtensions "io.spring.asciidoctor.backends:spring-asciidoctor-backends:0.0.7"
}

task prepareAsciidocBuild(type: Sync) {
	// Copy doc sources
	from {
		configurations.docs.collect { zipTree(it) }
	}
	// and doc sources
	from "src/docs/asciidoc"
	// to a temporary build directory
	into "$buildDir/asciidoc"
}

asciidoctor {
	baseDirFollowsSourceFile()
	configurations "asciidoctorExtensions"
	outputOptions {
		backends "spring-html"
	}
	sourceDir = file("$buildDir/asciidoc")
	sources {
		include '*.adoc'
	}
	resources {
		from(sourceDir) {
			include 'images/*', 'css/**', 'js/**'
		}
	}
	logDocuments = true
	options doctype: 'book', eruby: 'erubis'
	attributes 'revnumber': project.version,
			'spring-version': project.version,
			'branch-or-tag': project.version.endsWith('SNAPSHOT') ? 'main' : "v${project.version}",
			'icons': 'font',
			'idprefix': '',
			'idseparator': '-',
			docinfo: 'shared',
			sectanchors: '',
			sectnums: '',
			stylesdir: "css/",
			stylesheet: 'spring.css',
			'linkcss': true,
			'nofooter': true,
			'allow-uri-read': '',
			'source-highlighter': 'highlight.js',
			'highlightjsdir': 'js/highlight',
			'highlightjs-theme': 'github',
			'project-version': project.version
}

configurations.archives.artifacts.clear()
