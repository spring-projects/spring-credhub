/*
 * Copyright 2016-2020 the original author or authors.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *      https://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

import org.springframework.boot.gradle.plugin.SpringBootPlugin

plugins {
	id 'org.asciidoctor.jvm.convert'
	id 'org.springframework.boot' apply false
}

description = "Spring CredHub Documentation"

configurations {
	docs
}

dependencies {
	implementation(platform(SpringBootPlugin.BOM_COORDINATES))
	implementation(project(":spring-credhub-core"))
	implementation("io.projectreactor:reactor-core")
	implementation("org.springframework.boot:spring-boot-autoconfigure")

	docs("io.spring.docresources:spring-doc-resources:0.2.5@zip")
}

task prepareAsciidocBuild(type: Sync) {
	dependsOn configurations.docs
	// copy doc resources
	from {
		configurations.docs.collect { zipTree(it) }
	}
	// and doc sources
	from "src/docs/asciidoc"
	// to a temporary build directory
	into "$buildDir/asciidoc"
}

asciidoctor {
	baseDirFollowsSourceFile()
	sourceDir = file("$buildDir/asciidoc")
	sources {
		include '*.adoc'
	}
	resources {
		from(sourceDir) {
			include 'images/*', 'css/**', 'js/**'
		}
	}
	logDocuments = true
//	backends = ["html5"]
	options doctype: 'book', eruby: 'erubis'
	attributes  'icons': 'font',
			'idprefix': '',
			'idseparator': '-',
			docinfo: 'shared',
			revnumber: project.version,
			'spring-version': "${springVersion}",
			'spring-boot-version': "${springBootVersion}",
			'spring-security-version': "${springSecurityVersion}",
			'branch-or-tag': project.version.endsWith('SNAPSHOT') ? 'main' : "v${project.version}",
			sectanchors: '',
			sectnums: '',
			stylesdir: "css/",
			stylesheet: 'spring.css',
			'linkcss': true,
			'nofooter': true,
			'allow-uri-read': '',
			'source-highlighter': 'highlight.js',
			'highlightjsdir': 'js/highlight',
			'highlightjs-theme': 'github'
}

asciidoctor.dependsOn prepareAsciidocBuild

configurations.archives.artifacts.clear()
